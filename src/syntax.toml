# Syntax definitions for Ofin

# IMPORTANT: Do not change the name of this token without updating the relevant code in lexer::mod.rs
[Token.Newline]
matcher = "\r?\n"
replace_with = "self"

[Token.StringLiteral]
matcher = "(\")((?:(?!\")[^\\\\]|(?:\\\\\\\\)*\\\\[^\\\\])*)(\")"
replace_with = "__new_string($1)"
extractor = "copy"

[Token.IntLiteral]
matcher = "-?\\d+"
replace_with = "__new_int($1)"
extractor = "copy"

[Token.BoolLiteral]
matcher = "(false|true)"
replace_with = "__new_bool($1)"
extractor = "copy"

[Token.EOL]
matcher = ";"
replace_with = "self"

[Token.Comment]
matcher = "((\\/\\*((.|(\r?\n))*)\\*\\/)|\\/\\/.*(\r?\n))"
# FIXME: Put comment back in with only newlines (so it doesn't attempt to parse it)
# To ensure debug lines don't get messed up

[Token.StringDeclaration]
matcher = "string\\s+.+\\s*="
replace_with = "let mut $1: __string ="
extractor = "\\s+.+(?==)"

[Token.IntDeclaration]
matcher = "int\\s+.+\\s*="
replace_with = "let mut $1: __int ="
extractor = "\\s+.+(?==)"

[Token.BoolDeclaration]
matcher = "bool\\s+.+\\s*="
replace_with = "let mut $1: __bool ="
extractor = "\\s+.+(?==)"

[Token.LBracket]
matcher = "\\("
replace_with = "self"

[Token.RBracket]
matcher = "\\)"
replace_with = "self"

[Token.Comma]
matcher = ","
replace_with = "self"

# This token should remain second last in the syntax list
[Token.Ident]
matcher = "[a-zA-Z_]+"
replace_with = "self"

# This token should remain at the end of the syntax list to ensure that it has the lowest priority
[Token.Space]
matcher = "\\s+"